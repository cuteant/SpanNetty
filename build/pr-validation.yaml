# Pull request validation for Windows against the `future` and `release/*` branches
# See https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema for reference
trigger:
  branches:
    include:
      - main
      - release/*

pr:
  autoCancel: true # indicates whether additional pushes to a PR should cancel in-progress runs for the same PR. Defaults to true
  branches:
    include: [ main, release/* ] # branch names which will trigger a build

name: $(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

jobs:
  - job: WindowsBuild
    displayName: Windows Build
    pool:
      vmImage: windows-2019
      demands: Cmd
    steps:
      - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
        clean: false  # whether to fetch clean each time
        submodules: recursive  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
        persistCredentials: true
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK 5.0.302'
        inputs:
          packageType: sdk
          version: 5.0.302
      - task: BatchScript@1
        displayName: Windows Build
        inputs:
          filename: build.cmd
          arguments: 'Build incremental' # Run an incremental build
        continueOnError: true
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
      - task: CopyFiles@2
        displayName: 'Copy Build Output'
        inputs:
          sourceFolder: Artifacts
          contents: '*'
          targetFolder: $(Build.ArtifactStagingDirectory)
          continueOnError: boolean  # 'true' if future steps should run even if this step fails; defaults to 'false'
      - script: 'echo 1>&2'
        failOnStderr: true
        displayName: 'If above is partially succeeded, then fail'
        condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')

  - template: azure-pipeline.template.yaml
    parameters:
      name: 'net_core_tests_windows'
      displayName: '.NET Core Unit Tests (Windows)'
      vmImage: 'windows-2019'
      scriptFileName: build.cmd
      scriptArgs: RunTests incremental
      outputDirectory: 'TestResults'
      artifactName: 'net_core_tests_windows-$(Build.BuildId)'

  - template: azure-pipeline.template.yaml
    parameters:
      name: 'net_core_tests_ubuntu_16'
      displayName: '.NET Core Unit Tests (Ubuntu-16)'
      vmImage: 'ubuntu-16.04'
      scriptFileName: './build.sh'
      scriptArgs: RunTests incremental
      outputDirectory: 'TestResults'
      artifactName: 'net_core_tests_ubuntu_16-$(Build.BuildId)'

  - template: azure-pipeline.template.yaml
    parameters:
      name: 'net_core_tests_ubuntu_18'
      displayName: '.NET Core Unit Tests (Ubuntu-18)'
      vmImage: 'ubuntu-18.04'
      scriptFileName: './build.sh'
      scriptArgs: RunTests incremental
      outputDirectory: 'TestResults'
      artifactName: 'net_core_tests_ubuntu_18-$(Build.BuildId)'

  - template: azure-pipeline.template.yaml
    parameters:
      name: 'net_core_tests_mac_1014'
      displayName: '.NET Core Unit Tests (MacOS-10.14)'
      vmImage: 'macOS-10.14'
      scriptFileName: './build.sh'
      scriptArgs: RunTests incremental
      outputDirectory: 'TestResults'
      artifactName: 'net_core_tests_mac_1014-$(Build.BuildId)'

  - template: azure-pipeline.template.yaml
    parameters:
      name: 'net_core_tests_mac_1015'
      displayName: '.NET Core Unit Tests (MacOS-10.15)'
      vmImage: 'macOS-10.15'
      scriptFileName: './build.sh'
      scriptArgs: RunTests incremental
      outputDirectory: 'TestResults'
      artifactName: 'net_core_tests_mac_1015-$(Build.BuildId)'
